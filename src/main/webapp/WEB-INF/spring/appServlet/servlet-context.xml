<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee
 http://www.springframework.org/schema/jee/spring-jee.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc.xsd
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator" />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**"
		location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- aspect-jの宣言 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- コンポーネントスキャンの範囲指定 -->
	<context:component-scan
		base-package="com.example.input" />
	<!-- データソースの指定 -->
	<jee:jndi-lookup id="dataSource"
		jndi-name="jdbc/inputdb" />
	<!-- バリデータの設定 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- メッセージソースの設定 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>
	<!-- Hibernate ORM の設定 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>hbm/Admin.hbm.xml</value>
				<value>hbm/Employee.hbm.xml</value>
				<value>hbm/Buyer.hbm.xml</value>
				<value>hbm/InventoryManager.hbm.xml</value>
				<value>hbm/Department.hbm.xml</value>
				<value>hbm/Supplier.hbm.xml</value>
				<value>hbm/Part.hbm.xml</value>
				<value>hbm/Order.hbm.xml</value>
				<value>hbm/Location.hbm.xml</value>
				<value>hbm/Stock.hbm.xml</value>
				<value>hbm/Reception.hbm.xml</value>
				<value>hbm/Inventory.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.globally_quoted_identifiers">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- Transaction Manager の設定 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven
		transaction-manager="txManager" />
</beans>